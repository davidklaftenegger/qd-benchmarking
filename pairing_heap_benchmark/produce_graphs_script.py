#!/usr/bin/python2

import matplotlib
matplotlib.use('Agg')

import matplotlib.pyplot as plt

try:
	Format = FORMAT
except NameError:
	Format = 'pdf'

from itertools import cycle
mystyles = ['o', 'x', 's', 'D', '^', 'v', '<', '>', '*'] #etc
mycolors = ['b', 'g', 'r', 'c', 'm', 'y', '#6699FF', 'k', '#660000', '#99FF66', '#FF6699'] #etc

def read_dat_file(the_file):
    with open(the_file, 'r') as f:
        lines = f.readlines()
        x = []
        y = []
        for line in lines:
            p = line.split()
	    if(int(p[0]) != 24):
                x.append(float(p[0]))
                y.append(float(p[2])/float(p[1]))
        return (x, y)

def set_up_figure(title):
    ax_marker = cycle( mystyles )
    colors = cycle( mycolors )
    plt.figure(figsize=(8,4.75))
    plt.autoscale(enable=True, tight=False)
    plt.xlabel('Number of Threads')
    plt.ylabel('Operations / Microsecond')
    plt.figtext(0.5, 0.915, title, horizontalalignment='center', verticalalignment='center')
#    plt.title(title)
    return (ax_marker, colors)

def set_up_figure_rel(title):
    ax_marker = cycle( mystyles )
    colors = cycle( mycolors )
    plt.figure(figsize=(8,4.75))
    plt.autoscale(enable=True, tight=False)
    plt.xlabel('Number of Threads')
    plt.ylabel('Throughput relative to Pthreads')
    plt.figtext(0.5, 0.915, title, horizontalalignment='center', verticalalignment='center')
#    plt.title(title)
    return (ax_marker, colors)


def plot_file(the_file, title, ax_marker, line_color):
    (x_list, y_list) = read_dat_file(the_file)
    mapped = [(a, [b for (comp_a, b) in zip(x_list, y_list) if a == comp_a]) for a in x_list]
    mapped.sort()
    x,y_vals = zip(*mapped)
    y = map(lambda v : sum(v) / float(len(v)), y_vals)
    emin = map(lambda (v, avg) : avg - min(v), zip(y_vals, y))
    emax = map(lambda (v, avg) : max(v) - avg, zip(y_vals, y))
    plt.errorbar(x, y, [emin, emax], label=title, linewidth=2, elinewidth=1, marker=ax_marker.next(), color=line_color.next())
    #plt.plot(x, y, label=title, linewidth=2)

relative = None
def set_relative(the_file):
    (x_list, y_list) = read_dat_file(the_file)
    mapped = [(a, [b for (comp_a, b) in zip(x_list, y_list) if a == comp_a]) for a in x_list]
    mapped.sort()
    x,y_vals = zip(*mapped)
    y = map(lambda v : sum(v) / float(len(v)), y_vals)
    global relative
    relative = y

def plot_file_rel(the_file, title, ax_marker, line_color):
    (x_list, y_list) = read_dat_file(the_file)
    mapped = [(a, [b for (comp_a, b) in zip(x_list, y_list) if a == comp_a]) for a in x_list]
    mapped.sort()
    x,y_vals_src = zip(*mapped)
    print(y_vals_src)
    #print(relative)
    y_vals = [[v / r for v in vs] for (vs, r) in zip(y_vals_src, relative)]
    print("---")
    print(relative)
    print("---")
    print(y_vals)
    y = map(lambda v : sum(v) / float(len(v)), y_vals)
    print("###")
    print("###")
    emin = map(lambda (v, avg) : avg - min(v), zip(y_vals, y))
    emax = map(lambda (v, avg) : max(v) - avg, zip(y_vals, y))
    plt.errorbar(x, y, [emin, emax], label=title, linewidth=2, elinewidth=1, marker=ax_marker.next(), color=line_color.next())
    #plt.plot(x, y, label=title, linewidth=2)


def complete_figure(save_file_name):
    plt.axis(xmin=0)
    plt.axis(ymin=0)
    plt.tight_layout()
    plt.legend(loc='best', ncol=1, fontsize=12)
    plt.savefig(save_file_name + '.' + Format, bbox_inches='tight')
    print save_file_name + '.' + Format

for lw in [0,32,64,128]:
    (m, c) = set_up_figure("Priority Queue Benchmark")
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_clh#data_sandy#clh/b_no_0.5_2_1_0_"+str(lw)+".dat", "CLH", m, c)
    plot_file("pairing_heap_bench_cohortlock#data_sandy#cohortlock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Cohort", m, c)
    complete_figure("pairingheap_onlylock")
    (m, c) = set_up_figure("Priority Queue Benchmark")
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_flatcomb#data_sandy#flatcomb/b_no_0.5_2_1_0_"+str(lw)+".dat", "FC", m, c)
    plot_file("pairing_heap_bench_ccsynch#data_sandy#ccsynch/b_no_0.5_2_1_0_"+str(lw)+".dat", "CC-Synch", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_"+str(lw)+".dat", "H-Synch", m, c)
    plot_file("pairing_heap_bench_oyamaopt#data_sandy#oyamaopt/b_no_0.5_2_1_0_"+str(lw)+".dat", "DetachExec", m, c)
    complete_figure("pairingheap_onlydel")

    (m, c) = set_up_figure("Priority Queue (local work: "+str(lw)+")")
    plot_file("pairing_heap_bench_cpp_qd#data_sandy#cpp_qd/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD lock", m, c)
    #plot_file("pairing_heap_bench_cpp_mcs#data_sandy#cpp_mcs/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (no futex)", m, c)
    plot_file("pairing_heap_bench_flatcomb#data_sandy#flatcomb/b_no_0.5_2_1_0_"+str(lw)+".dat", "FC", m, c)
    plot_file("pairing_heap_bench_ccsynch#data_sandy#ccsynch/b_no_0.5_2_1_0_"+str(lw)+".dat", "CC-Synch", m, c)
    plot_file("pairing_heap_bench_clh#data_sandy#clh/b_no_0.5_2_1_0_"+str(lw)+".dat", "CLH", m, c)
    #plot_file("pairing_heap_bench_oyama#data_sandy#oyama/b_no_0.5_2_1_0_"+str(lw)+".dat", "Oyama", m, c)
    plot_file("pairing_heap_bench_oyamaopt#data_sandy#oyamaopt/b_no_0.5_2_1_0_"+str(lw)+".dat", "DetachExec", m, c)
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_"+str(lw)+".dat", "Lock-Free", m, c)
    complete_figure("pairingheap_std_"+str(lw))
    (m, c) = set_up_figure("Priority Queue (local work: "+str(lw)+")")
    plot_file("pairing_heap_bench_cpp_hqd#data_sandy#cpp_hqd/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_"+str(lw)+".dat", "H-Synch", m, c)
    plot_file("pairing_heap_bench_cohortlock#data_sandy#cohortlock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Cohort", m, c)
    m.next()
    c.next()
    m.next()
    c.next()
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_"+str(lw)+".dat", "Lock-Free", m, c)
    complete_figure("pairingheap_hier_"+str(lw))
    (m, c) = set_up_figure("Priority Queue (local work: "+str(lw)+")")
    plot_file("pairing_heap_bench_cpp_qd#data_sandy#cpp_qd/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD", m, c)
    plot_file("pairing_heap_bench_cpp_mcs#data_sandy#cpp_mcs/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (MCS)", m, c)
    plot_file("pairing_heap_bench_cpp_qd_cas#data_sandy#cpp_qd_cas/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padqdlock#data_sandy#padqdlock/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (padded)", m, c)
    plot_file("pairing_heap_bench_cpp_qd_nodetach#data_sandy#cpp_qd_nodetach/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodqdlock#data_sandy#padnodqdlock/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_cpp_tatas#data_sandy#cpp_tatas/b_no_0.5_2_1_0_"+str(lw)+".dat", "QD (TATAS)", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_"+str(lw)+".dat", "Lock-Free", m, c)
    complete_figure("pairingheap_compqd_"+str(lw))
    (m, c) = set_up_figure("Priority Queue (local work: "+str(lw)+")")
    plot_file("pairing_heap_bench_cpp_hqd#data_sandy#cpp_hqd/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD", m, c)
    plot_file("pairing_heap_bench_cpp_hqd_futex#data_sandy#cpp_hqd_futex/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (futex)", m, c)
    #plot_file("pairing_heap_bench_hqdlock_nostarve#data_sandy#hqdlock_nostarve/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (nostarve)", m, c)
    plot_file("pairing_heap_bench_cpp_hqd_cas#data_sandy#cpp_hqd_cas/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padhqdlock#data_sandy#padhqdlock/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (padded)", m, c)
    plot_file("pairing_heap_bench_cpp_hqd_nodetach#data_sandy#cpp_hqd_nodetach/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodhqdlock#data_sandy#padnodhqdlock/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (pad/nod)", m, c)
    #plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_"+str(lw)+".dat", "H-Synch", m, c)
    plot_file("pairing_heap_bench_cpp_hqd_tatas#data_sandy#cpp_hqd_tatas/b_no_0.5_2_1_0_"+str(lw)+".dat", "HQD (TATAS)", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_"+str(lw)+".dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_"+str(lw)+".dat", "Lock-Free", m, c)
    complete_figure("pairingheap_comphqd_"+str(lw))

if False:
    (m, c) = set_up_figure("Priority Queue (local work: 0)")
    plot_file("pairing_heap_bench_qdlock#data_sandy#qdlock/b_no_0.5_2_1_0_0.dat", "QD lock", m, c)
    plot_file("pairing_heap_bench_qdlock_futex#data_sandy#qdlock_futex/b_no_0.5_2_1_0_0.dat", "QD (futex)", m, c)
    plot_file("pairing_heap_bench_flatcomb#data_sandy#flatcomb/b_no_0.5_2_1_0_0.dat", "FC", m, c)
    plot_file("pairing_heap_bench_ccsynch#data_sandy#ccsynch/b_no_0.5_2_1_0_0.dat", "CC-Synch", m, c)
    plot_file("pairing_heap_bench_clh#data_sandy#clh/b_no_0.5_2_1_0_0.dat", "CLH", m, c)
    #plot_file("pairing_heap_bench_oyama#data_sandy#oyama/b_no_0.5_2_1_0_0.dat", "Oyama", m, c)
    plot_file("pairing_heap_bench_oyamaopt#data_sandy#oyamaopt/b_no_0.5_2_1_0_0.dat", "DetachExec", m, c)
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_0.dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_0.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_std_0")
    (m, c) = set_up_figure("Priority Queue (local work: 0)")
    plot_file("pairing_heap_bench_hqdlock#data_sandy#hqdlock/b_no_0.5_2_1_0_0.dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_0.dat", "H-Synch", m, c)
    plot_file("pairing_heap_bench_cohortlock#data_sandy#cohortlock/b_no_0.5_2_1_0_0.dat", "Cohort", m, c)
    m.next()
    c.next()
    m.next()
    c.next()
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_0.dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_0.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_hier_0")
    (m, c) = set_up_figure("Priority Queue (local work: 0)")
    plot_file("pairing_heap_bench_qdlock#data_sandy#qdlock/b_no_0.5_2_1_0_0.dat", "QD lock", m, c)
    plot_file("pairing_heap_bench_qdlock_nostarve#data_sandy#qdlock_nostarve/b_no_0.5_2_1_0_0.dat", "QD (nostarve)", m, c)
    plot_file("pairing_heap_bench_casqdlock#data_sandy#casqdlock/b_no_0.5_2_1_0_0.dat", "QD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padqdlock#data_sandy#padqdlock/b_no_0.5_2_1_0_0.dat", "QD (padded)", m, c)
    plot_file("pairing_heap_bench_nodqdlock#data_sandy#nodqdlock/b_no_0.5_2_1_0_0.dat", "QD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodqdlock#data_sandy#padnodqdlock/b_no_0.5_2_1_0_0.dat", "QD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_qdlock_futex#data_sandy#qdlock_futex/b_no_0.5_2_1_0_0.dat", "QD (futex)", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_0.dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_0.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_compqd_0")
    (m, c) = set_up_figure("Priority Queue (local work: 0)")
    plot_file("pairing_heap_bench_hqdlock#data_sandy#hqdlock/b_no_0.5_2_1_0_0.dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hqdlock_nostarve#data_sandy#hqdlock_nostarve/b_no_0.5_2_1_0_0.dat", "HQD (nostarve)", m, c)
    plot_file("pairing_heap_bench_cashqdlock#data_sandy#cashqdlock/b_no_0.5_2_1_0_0.dat", "HQD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padhqdlock#data_sandy#padhqdlock/b_no_0.5_2_1_0_0.dat", "HQD (padded)", m, c)
    plot_file("pairing_heap_bench_nodhqdlock#data_sandy#nodhqdlock/b_no_0.5_2_1_0_0.dat", "HQD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodhqdlock#data_sandy#padnodhqdlock/b_no_0.5_2_1_0_0.dat", "HQD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_0.dat", "H-Synch", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_0.dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_0.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_comphqd_0")


    (m, c) = set_up_figure("Priority Queue (local work: 64)")
    plot_file("pairing_heap_bench_qdlock#data_sandy#qdlock/b_no_0.5_2_1_0_64.dat", "QD lock", m, c)
    plot_file("pairing_heap_bench_qdlock_futex#data_sandy#qdlock_futex/b_no_0.5_2_1_0_64.dat", "QD (futex)", m, c)
    plot_file("pairing_heap_bench_flatcomb#data_sandy#flatcomb/b_no_0.5_2_1_0_64.dat", "FC", m, c)
    plot_file("pairing_heap_bench_ccsynch#data_sandy#ccsynch/b_no_0.5_2_1_0_64.dat", "CC-Synch", m, c)
    plot_file("pairing_heap_bench_clh#data_sandy#clh/b_no_0.5_2_1_0_64.dat", "CLH", m, c)
    #plot_file("pairing_heap_bench_oyama#data_sandy#oyama/b_no_0.5_2_1_0_64.dat", "Oyama", m, c)
    plot_file("pairing_heap_bench_oyamaopt#data_sandy#oyamaopt/b_no_0.5_2_1_0_64.dat", "DetachExec", m, c)
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_64.dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_64.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_std_64")
    (m, c) = set_up_figure("Priority Queue (local work: 64)")
    plot_file("pairing_heap_bench_hqdlock#data_sandy#hqdlock/b_no_0.5_2_1_0_64.dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_64.dat", "H-Synch", m, c)
    plot_file("pairing_heap_bench_cohortlock#data_sandy#cohortlock/b_no_0.5_2_1_0_64.dat", "Cohort", m, c)
    m.next()
    c.next()
    m.next()
    c.next()
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_64.dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_64.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_hier_64")
    (m, c) = set_up_figure("Priority Queue (local work: 64)")
    plot_file("pairing_heap_bench_qdlock#data_sandy#qdlock/b_no_0.5_2_1_0_64.dat", "QD lock", m, c)
    plot_file("pairing_heap_bench_qdlock_nostarve#data_sandy#qdlock_nostarve/b_no_0.5_2_1_0_64.dat", "QD (nostarve)", m, c)
    plot_file("pairing_heap_bench_casqdlock#data_sandy#casqdlock/b_no_0.5_2_1_0_64.dat", "QD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padqdlock#data_sandy#padqdlock/b_no_0.5_2_1_0_64.dat", "QD (padded)", m, c)
    plot_file("pairing_heap_bench_nodqdlock#data_sandy#nodqdlock/b_no_0.5_2_1_0_64.dat", "QD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodqdlock#data_sandy#padnodqdlock/b_no_0.5_2_1_0_64.dat", "QD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_qdlock_futex#data_sandy#qdlock_futex/b_no_0.5_2_1_0_64.dat", "QD (futex)", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_64.dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_64.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_compqd_64")
    (m, c) = set_up_figure("Priority Queue (local work: 64)")
    plot_file("pairing_heap_bench_hqdlock#data_sandy#hqdlock/b_no_0.5_2_1_0_64.dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hqdlock_nostarve#data_sandy#hqdlock_nostarve/b_no_0.5_2_1_0_64.dat", "HQD (nostarve)", m, c)
    plot_file("pairing_heap_bench_cashqdlock#data_sandy#cashqdlock/b_no_0.5_2_1_0_64.dat", "HQD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padhqdlock#data_sandy#padhqdlock/b_no_0.5_2_1_0_64.dat", "HQD (padded)", m, c)
    plot_file("pairing_heap_bench_nodhqdlock#data_sandy#nodhqdlock/b_no_0.5_2_1_0_64.dat", "HQD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodhqdlock#data_sandy#padnodhqdlock/b_no_0.5_2_1_0_64.dat", "HQD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_64.dat", "H-Synch", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_64.dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_64.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_comphqd_64")


    (m, c) = set_up_figure("Priority Queue (local work: 128)")
    plot_file("pairing_heap_bench_qdlock#data_sandy#qdlock/b_no_0.5_2_1_0_128.dat", "QD lock", m, c)
    plot_file("pairing_heap_bench_qdlock_futex#data_sandy#qdlock_futex/b_no_0.5_2_1_0_128.dat", "QD (futex)", m, c)
    plot_file("pairing_heap_bench_flatcomb#data_sandy#flatcomb/b_no_0.5_2_1_0_128.dat", "FC", m, c)
    plot_file("pairing_heap_bench_ccsynch#data_sandy#ccsynch/b_no_0.5_2_1_0_128.dat", "CC-Synch", m, c)
    plot_file("pairing_heap_bench_clh#data_sandy#clh/b_no_0.5_2_1_0_128.dat", "CLH", m, c)
    #plot_file("pairing_heap_bench_oyama#data_sandy#oyama/b_no_0.5_2_1_0_128.dat", "Oyama", m, c)
    plot_file("pairing_heap_bench_oyamaopt#data_sandy#oyamaopt/b_no_0.5_2_1_0_128.dat", "DetachExec", m, c)
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_128.dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_128.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_std_128")
    (m, c) = set_up_figure("Priority Queue (local work: 128)")
    plot_file("pairing_heap_bench_hqdlock#data_sandy#hqdlock/b_no_0.5_2_1_0_128.dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_128.dat", "H-Synch", m, c)
    plot_file("pairing_heap_bench_cohortlock#data_sandy#cohortlock/b_no_0.5_2_1_0_128.dat", "Cohort", m, c)
    m.next()
    c.next()
    m.next()
    c.next()
    plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_128.dat", "Pthreads", m, c)
    plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_128.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_hier_128")
    (m, c) = set_up_figure("Priority Queue (local work: 128)")
    plot_file("pairing_heap_bench_qdlock#data_sandy#qdlock/b_no_0.5_2_1_0_128.dat", "QD lock", m, c)
    plot_file("pairing_heap_bench_qdlock_nostarve#data_sandy#qdlock_nostarve/b_no_0.5_2_1_0_128.dat", "QD (nostarve)", m, c)
    plot_file("pairing_heap_bench_casqdlock#data_sandy#casqdlock/b_no_0.5_2_1_0_128.dat", "QD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padqdlock#data_sandy#padqdlock/b_no_0.5_2_1_0_128.dat", "QD (padded)", m, c)
    plot_file("pairing_heap_bench_nodqdlock#data_sandy#nodqdlock/b_no_0.5_2_1_0_128.dat", "QD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodqdlock#data_sandy#padnodqdlock/b_no_0.5_2_1_0_128.dat", "QD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_qdlock_futex#data_sandy#qdlock_futex/b_no_0.5_2_1_0_128.dat", "QD (futex)", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_128.dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_128.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_compqd_128")
    (m, c) = set_up_figure("Priority Queue (local work: 128)")
    plot_file("pairing_heap_bench_hqdlock#data_sandy#hqdlock/b_no_0.5_2_1_0_128.dat", "HQD lock", m, c)
    plot_file("pairing_heap_bench_hqdlock_nostarve#data_sandy#hqdlock_nostarve/b_no_0.5_2_1_0_128.dat", "HQD (nostarve)", m, c)
    plot_file("pairing_heap_bench_cashqdlock#data_sandy#cashqdlock/b_no_0.5_2_1_0_128.dat", "HQD (CAS)", m, c)
    #plot_file("pairing_heap_bench_padhqdlock#data_sandy#padhqdlock/b_no_0.5_2_1_0_128.dat", "HQD (padded)", m, c)
    plot_file("pairing_heap_bench_nodhqdlock#data_sandy#nodhqdlock/b_no_0.5_2_1_0_128.dat", "HQD (nodetach)", m, c)
    #plot_file("pairing_heap_bench_padnodhqdlock#data_sandy#padnodhqdlock/b_no_0.5_2_1_0_128.dat", "HQD (pad/nod)", m, c)
    plot_file("pairing_heap_bench_hsynch#data_sandy#hsynch/b_no_0.5_2_1_0_128.dat", "H-Synch", m, c)
    #plot_file("pairing_heap_bench_pthreadslock#data_sandy#pthreadslock/b_no_0.5_2_1_0_128.dat", "Pthreads", m, c)
    #plot_file("pairing_heap_bench_lf#data_sandy#lf/b_no_0.5_2_1_0_128.dat", "Lock-Free", m, c)
    complete_figure("pairingheap_comphqd_128")

